Demo.java: 
- first we will create the B object without parameter, output will be: 
        B obj = new B(5);
        O/P:    in A
                in B
- Then we tried to call Parameterized one for B: 
        B obj = new B(5);
        O/P:    in A
                in B Int

Question comes : why "in A" is present in Output
- We can understand the o/p "in B" and "in B Int" that is because of default and Parameterized object call.
- but why "in A" is in Output. 
Answer: Because of presence of Super()

Super() : means call the Constructor of Super class - parent class

super(): To remeber we can consider super() method as like "Jhon Cena"
- it is always there but you can't see it. 
- weather you mention it or not the super() method is there in every Constructor in Java.
- the position of super() method is always on the first line of Constructor:
        public B(){
        super();
        System.out.println("in B");
    }
- Weather you mention this super() or not, it is always present at this point.


Demo2.java
- here insider super method we passed an argument as 5.
- thus while calling parent/ super class Constructor it will call the Parameterized Constructor of A:
        
        B obj = new B(5);
        O/P:    in A int
                in B Int


Object Class: In Java every class is extending Object class.
- Also point to remmber is that class A also extends Object class. thus Constructor of class A has also a super method in it, and 
this super method calls internally the Constructor of class A.






******* this() method ************
Ques: Can we call the B class object and can call both the Constructors of class B ?
in A
in B
in B int 
this is what we are expecting. 
Ans: refer Demo3.java
Here comes the use of this() method.

first B Parameterized one is called 
and because of presence of this() it will call default Constructor of B class.
B class Constructor internally calls the Constructor of class A
so A class Constructor prints - "in A"
then B class default Constructor is called which calls A class Internally to call the mehod -- "in B"
then B class Parameterized Constructor is called and it prints - "in B int"